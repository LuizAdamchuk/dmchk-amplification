/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsBoolean,
  ValidateNested,
} from "class-validator";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { UserConfigUpdateManyWithoutUsersInput } from "./UserConfigUpdateManyWithoutUsersInput";
import { Type } from "class-transformer";
import { UsersWorkspaceUpdateManyWithoutUsersInput } from "./UsersWorkspaceUpdateManyWithoutUsersInput";
import { UserVerificationCodeUpdateManyWithoutUsersInput } from "./UserVerificationCodeUpdateManyWithoutUsersInput";

@InputType()
class UserUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  roles?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  status?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => UserConfigUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => UserConfigUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => UserConfigUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  userConfigs?: UserConfigUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string;

  @ApiProperty({
    required: false,
    type: () => UsersWorkspaceUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => UsersWorkspaceUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => UsersWorkspaceUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  usersWorkspaces?: UsersWorkspaceUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => UserVerificationCodeUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => UserVerificationCodeUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => UserVerificationCodeUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  userVerificationCodes?: UserVerificationCodeUpdateManyWithoutUsersInput;
}

export { UserUpdateInput as UserUpdateInput };
